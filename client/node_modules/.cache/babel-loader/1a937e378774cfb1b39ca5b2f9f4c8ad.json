{"ast":null,"code":"var _jsxFileName = \"/Users/pattonparham/Desktop/CodeProjects/Expanded-GenSplice-App/client/src/components/Recorder/Recorder.js\";\nimport React from \"react\";\nimport \"./Recorder.css\";\nimport { Col, Row, Container } from \"../Grid/index\";\n\nfunction Recorder() {\n  const mediaStreamDestination = audioContext.createMediaStreamDestination();\n  someOtherNode.connect(mediaStreamDestination);\n  const mediaRecorder = new MediaRecorder(mediaStreamDestination.stream);\n  mediaRecorder.addEventListener('dataavailable', e => {// Recorded data is in `e.data`\n  });\n  mediaRecorder.start();\n  media;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"audio\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: mediaRecorder.start(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: mediaRecorder.stop(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default Recorder;","map":{"version":3,"sources":["/Users/pattonparham/Desktop/CodeProjects/Expanded-GenSplice-App/client/src/components/Recorder/Recorder.js"],"names":["React","Col","Row","Container","Recorder","mediaStreamDestination","audioContext","createMediaStreamDestination","someOtherNode","connect","mediaRecorder","MediaRecorder","stream","addEventListener","e","start","media","stop"],"mappings":";AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,gBAAP;AACA,SAAQC,GAAR,EAAaC,GAAb,EAAkBC,SAAlB,QAAkC,eAAlC;;AAEA,SAASC,QAAT,GAAmB;AACf,QAAMC,sBAAsB,GAAGC,YAAY,CAACC,4BAAb,EAA/B;AAEJC,EAAAA,aAAa,CAACC,OAAd,CAAsBJ,sBAAtB;AAEA,QAAMK,aAAa,GAAG,IAAIC,aAAJ,CAAkBN,sBAAsB,CAACO,MAAzC,CAAtB;AAEAF,EAAAA,aAAa,CAACG,gBAAd,CAA+B,eAA/B,EAAiDC,CAAD,IAAO,CACrD;AACD,GAFD;AAIAJ,EAAAA,aAAa,CAACK,KAAd;AACAC,EAAAA,KAAK;AAEL,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAQ,IAAA,OAAO,EAAEN,aAAa,CAACK,KAAd,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,eAEA;AAAQ,IAAA,OAAO,EAAEL,aAAa,CAACO,IAAd,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFA,CADJ,CADJ;AAQC;;AAED,eAAeb,QAAf","sourcesContent":["\nimport React from \"react\";\nimport \"./Recorder.css\"\nimport {Col, Row, Container} from \"../Grid/index\";\n\nfunction Recorder(){\n    const mediaStreamDestination = audioContext.createMediaStreamDestination();\n\nsomeOtherNode.connect(mediaStreamDestination);\n\nconst mediaRecorder = new MediaRecorder(mediaStreamDestination.stream);\n\nmediaRecorder.addEventListener('dataavailable', (e) => {\n  // Recorded data is in `e.data`\n});\n\nmediaRecorder.start();\nmedia\n\nreturn(\n    <div>\n        <audio>\n        <button onClick={mediaRecorder.start()}></button>\n        <button onClick={mediaRecorder.stop()}></button>\n        </audio>\n    </div>\n)\n}\n\nexport default Recorder;"]},"metadata":{},"sourceType":"module"}