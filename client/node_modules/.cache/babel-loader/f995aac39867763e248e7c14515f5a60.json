{"ast":null,"code":"var _jsxFileName = \"/Users/pattonparham/Desktop/CodeProjects/Expanded-GenSplice-App/client/src/utils/GlobalState.js\";\nimport React, { createContext, useReducer, useContext } from \"react\";\nimport { ADD_SOUND } from \"./actions\";\nconst StoreContext = createContext();\nconst {\n  Provider\n} = StoreContext;\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case ADD_SOUND:\n      return { ...state,\n        sounds: [action.sound, ...state.sounds]\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst StoreProvider = ({\n  value = [],\n  ...props\n}) => {\n  const [state, dispatch] = useReducer(reducer, {\n    sounds: [],\n    currentSound: {\n      _id: 0,\n      title: \"\",\n      url: \"\"\n    }\n  });\n  return /*#__PURE__*/React.createElement(Provider, Object.assign({\n    value: [state, dispatch]\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 8\n    }\n  }));\n};\n\nconst useStoreContext = () => {\n  return useContext(StoreContext);\n};\n\nexport { StoreProvider, useStoreContext };","map":{"version":3,"sources":["/Users/pattonparham/Desktop/CodeProjects/Expanded-GenSplice-App/client/src/utils/GlobalState.js"],"names":["React","createContext","useReducer","useContext","ADD_SOUND","StoreContext","Provider","reducer","state","action","type","sounds","sound","StoreProvider","value","props","dispatch","currentSound","_id","title","url","useStoreContext"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,aAAf,EAA8BC,UAA9B,EAA0CC,UAA1C,QAA2D,OAA3D;AAEA,SACAC,SADA,QAEO,WAFP;AAIA,MAAMC,YAAY,GAAGJ,aAAa,EAAlC;AACA,MAAM;AAAEK,EAAAA;AAAF,IAAeD,YAArB;;AAEA,MAAME,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAEnC,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKN,SAAL;AACI,aAAM,EACN,GAAGI,KADG;AAENG,QAAAA,MAAM,EAAE,CAACF,MAAM,CAACG,KAAR,EAAe,GAAGJ,KAAK,CAACG,MAAxB;AAFF,OAAN;;AAIA;AACI,aAAOH,KAAP;AAPZ;AASC,CAXD;;AAaA,MAAMK,aAAa,GAAG,CAAC;AAAEC,EAAAA,KAAK,GAAG,EAAV;AAAc,KAAGC;AAAjB,CAAD,KAA6B;AAE/C,QAAM,CAACP,KAAD,EAAQQ,QAAR,IAAoBd,UAAU,CAACK,OAAD,EAAU;AAC1CI,IAAAA,MAAM,EAAE,EADkC;AAE1CM,IAAAA,YAAY,EAAE;AACVC,MAAAA,GAAG,EAAE,CADK;AAEVC,MAAAA,KAAK,EAAE,EAFG;AAGVC,MAAAA,GAAG,EAAE;AAHK;AAF4B,GAAV,CAApC;AAQJ,sBAAO,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAE,CAACZ,KAAD,EAAQQ,QAAR;AAAjB,KAAwCD,KAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACC,CAXD;;AAaA,MAAMM,eAAe,GAAG,MAAM;AAC1B,SAAOlB,UAAU,CAACE,YAAD,CAAjB;AACH,CAFD;;AAIA,SAASQ,aAAT,EAAwBQ,eAAxB","sourcesContent":["import React, {createContext, useReducer, useContext} from \"react\";\n\nimport{\nADD_SOUND\n} from \"./actions\";\n\nconst StoreContext = createContext();\nconst { Provider } = StoreContext;\n\nconst reducer = (state, action) => {\n\nswitch (action.type){\n    case ADD_SOUND:\n        return{\n        ...state,\n        sounds: [action.sound, ...state.sounds]\n        }\n        default:\n            return state;\n    }\n};\n\nconst StoreProvider = ({ value = [], ...props}) => {\n\n    const [state, dispatch] = useReducer(reducer, {\n        sounds: [],\n        currentSound: {\n            _id: 0,\n            title: \"\",\n            url: \"\"\n        }\n    });\nreturn <Provider value={[state, dispatch]} {...props} />;\n};\n\nconst useStoreContext = () => {\n    return useContext(StoreContext);\n};\n\nexport { StoreProvider, useStoreContext };"]},"metadata":{},"sourceType":"module"}